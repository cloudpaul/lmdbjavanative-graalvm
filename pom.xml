<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>uk.co.cloudswing.timeseries</groupId>
	<artifactId>lmdb-viewer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>LMDB Viewer</name>

	<properties>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<main.class>sample.Main</main.class>
		<javafx.maven.plugin.version>0.0.5</javafx.maven.plugin.version>
		<client.maven.plugin.version>0.1.36</client.maven.plugin.version>
		<github.org>juji-io</github.org>
		<github.repo>lmdbjavanative</github.repo>
		<license.licenseName>apache_v2</license.licenseName>
	</properties>

	<dependencies>
		<!-- <dependency> <groupId>org.lmdbjava</groupId> <artifactId>lmdbjava</artifactId> 
			<version>0.8.1</version> </dependency> -->
		<dependency>
			<groupId>com.github.jnr</groupId>
			<artifactId>jnr-ffi</artifactId>
			<version>2.1.15</version>
		</dependency>
       <dependency>
	      <groupId>com.github.jnr</groupId>
	      <artifactId>jffi</artifactId>
	      <version>1.2.23</version>
	     <!--  <scope>runtime</scope> -->
	      <classifier>native</classifier>
	    </dependency>
<!-- 		<dependency>
			<groupId>juji</groupId>
			<artifactId>lmdbjavanative</artifactId>
			<version>0.8.2</version>
		</dependency> -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>11</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>11</version>
		</dependency>
		
		<!-- from lmdbjavanative pom -->
		<dependency>
			<groupId>com.github.jnr</groupId>
			<artifactId>jnr-constants</artifactId>
			<version>0.9.15</version>
		</dependency>
		<dependency>
			<groupId>org.graalvm.nativeimage</groupId>
			<artifactId>svm</artifactId>
			<version>21.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.graalvm.sdk</groupId>
			<artifactId>graal-sdk</artifactId>
			<version>21.0.0</version>
			<scope>provided</scope>
		</dependency>	
		<dependency>
			<groupId>org.lmdbjava</groupId>
			<artifactId>lmdbjava-native-linux-x86_64</artifactId>
			<version>0.9.24-1</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.lmdbjava</groupId>
			<artifactId>lmdbjava-native-osx-x86_64</artifactId>
			<version>0.9.24-1</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.lmdbjava</groupId>
			<artifactId>lmdbjava-native-windows-x86_64</artifactId>
			<version>0.9.24-1</version>
			<optional>true</optional>
		</dependency>
		    <dependency>
      <groupId>org.agrona</groupId>
      <artifactId>agrona</artifactId>
      <version>1.5.1</version>
      <optional>true</optional>
    </dependency>
	</dependencies>

	<build>
		<plugins>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>${javafx.maven.plugin.version}</version>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                </configuration>
            </plugin>
            
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
				    <encoding>UTF-8</encoding>
				</configuration>
				<executions>
				    <execution>
				        <id>copy-resources</id>
				        <phase>process-sources</phase>
				        <goals>
				            <goal>resources</goal>
<!-- 				            <goal>copy-resources</goal> -->
				        </goals>
				        <configuration>
				            <outputDirectory>${basedir}/target</outputDirectory>
				            <resources>
				                <resource>
				                    <directory>${basedir}</directory>
				                    <includes>
				                        <include>dynamic-proxies.json</include>
				                        <include>jniconfig-x86_64-linux.json</include>
				                    </includes>
				                </resource>
				            </resources>
				        </configuration>
				    </execution>
				</executions>
            </plugin>
            <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-dependency-plugin</artifactId>
		        <configuration>
		          <usedDependencies>
		            <usedDependency>org.lmdbjava:lmdbjava-native-linux-x86_64</usedDependency>
		            <usedDependency>org.lmdbjava:lmdbjava-native-windows-x86_64</usedDependency>
		            <usedDependency>org.lmdbjava:lmdbjava-native-osx-x86_64</usedDependency>
		          </usedDependencies>
		          <ignoredDependencies>
		            <ignoredDependency>com.github.jnr:jffi</ignoredDependency>
		          </ignoredDependencies>
		        </configuration>			    
			    <executions>
			        <execution>
			            <id>resource-dependencies</id>
			            <phase>compile</phase>
			            <goals>
			                <goal>unpack</goal>
			            </goals>
			            <configuration>
			                <artifactItems>
				                <artifactItem>
				                    <groupId>com.github.jnr</groupId>
				                    <artifactId>jffi</artifactId>
				                    <version>1.2.23</version>
				                    <classifier>native</classifier>
				                    <type>jar</type>
				                    <overWrite>true</overWrite>
				                    <includes>**</includes>
				                    <outputDirectory>${project.build.directory}</outputDirectory>
				                </artifactItem>
				                <artifactItem>
				                    <groupId>org.lmdbjava</groupId>
				                    <artifactId>lmdbjava-native-linux-x86_64</artifactId>
				                    <version>0.9.24-1</version>
				                    <!-- <classifier>native</classifier> -->
				                    <type>jar</type>
				                    <overWrite>true</overWrite>
				                    <includes>**</includes>
				                    <outputDirectory>${project.build.directory}</outputDirectory>
				                </artifactItem>
			                </artifactItems>
			               <!--  <includes>directory_to_include/**</includes> -->
			                <outputDirectory>${project.build.outputDirectory}</outputDirectory>
			            </configuration>
			        </execution>			        
			    </executions>
			</plugin>
<!-- 			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<id>lmdbjava-shade</id>
						<goals>
							<goal>shade</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<artifactSet>
								<includes>
									<include>org.lmdbjava:lmdbjava-native-linux-x86_64</include>
									<include>org.lmdbjava:lmdbjava-native-windows-x86_64</include>
									<include>org.lmdbjava:lmdbjava-native-osx-x86_64</include>
								</includes>
							</artifactSet>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
            <plugin>
                <groupId>com.gluonhq</groupId>
                <artifactId>client-maven-plugin</artifactId>
                <version>${client.maven.plugin.version}</version>
                <configuration>
                    <target>${client.target}</target>
                    <mainClass>sample.Loader</mainClass>
                    <!-- for language files -->
<!--                     <bundlesList>
                        <list>sample</list>
                    </bundlesList> -->
                    <reflectionList>
                        <list>sample.Controller</list>
                	    <list>javafx.fxml.FXMLLoader</list>
                 	   <list>javafx.scene.control.TableView</list>                        
                 	   <list>javafx.scene.control.Button</list>                        
                 	   <list>javafx.scene.control.TableColumn</list>                        
                 	   <list>javafx.scene.control.TableColumnBase</list>                        
                 	   <list>javafx.scene.control.TextField</list>                        
                 	   <list>javafx.scene.control.ToggleGroup</list>                        
                 	   <list>javafx.scene.control.RadioButton</list>                        
                 	   <list>javafx.scene.control.Separator</list>                        
                 	   <list>javafx.scene.control.cell.PropertyValueFactory</list>                        
					   <list>javafx.scene.layout.GridPane</list>
					   <list>org.lmdbjava.Lmdb</list>
					   <!-- <list>org.lmdbjava.LMDB</list> -->
					   <list>org.lmdbjava.ByteBufferProxy</list>
					   <list>java.nio.Buffer</list>
					   <list>jnr.ffi.provider.jffi.Provider</list>
				<!-- 	   <list>jnr.ffi.Runtime</list>
					   <list>jnr.ffi.LibraryLoader</list> -->
					  <!--  <list>jnr.ffi.byref.PointerByReference</list> -->
                    </reflectionList>
            <!--         <jniList>
                    	<list>org.lmdbjava.LMDB</list>
                    </jniList> -->
                    <nativeImageArgs>
                        <!-- <nativeImageArg>- - initialize-at-build-time=jnr.ffi.LibraryLoader</nativeImageArg> -->
                       <!--  <nativeImageArg>- -add-exports jdk.charsets/sun.nio.ch=ALL-UNNAMED</nativeImageArg> -->
                        <nativeImageArg>--initialize-at-run-time=org.lmdbjava.Library,jnr.ffi.Runtime,jnr.ffi.LibraryLoader,jnr.ffi.byref.PointerByReference,jnr.ffi.provider.jffi.Provider,com.kenai.jffi.Foreign</nativeImageArg>
                        <nativeImageArg>--report-unsupported-elements-at-runtime</nativeImageArg>
                        <nativeImageArg>-H:CCompilerOption=-Wno-everything</nativeImageArg>
<!--                         <nativeImageArg>-H:CLibraryPath=/usr/include</nativeImageArg> -->
                       <!--  <nativeImageArg>-H:CCompilerOption=-static-libstdc++</nativeImageArg> -->
                        <nativeImageArg>-H:UseLibC=glibc</nativeImageArg>
                       <!--  <nativeImageArg>- -libc=musl</nativeImageArg> -->
                        <nativeImageArg>-D--add-exports java.base/sun.nio.ch=ALL-UNNAMED</nativeImageArg>
                        <nativeImageArg>-H:+AllowIncompleteClasspath</nativeImageArg>
                        <nativeImageArg>-H:-CheckToolchain</nativeImageArg>
                        <nativeImageArg>-H:IncludeResources=dynamic-proxies.json,jni-config.json</nativeImageArg>
                        <nativeImageArg>-H:DynamicProxyConfigurationFiles=../../../../dynamic-proxies.json</nativeImageArg>
                       <!--  <nativeImageArg>-H:JNIConfigurationResources=${basedir}/jni-config.json</nativeImageArg> -->
                        <!-- <nativeImageArg>- -static</nativeImageArg> -->
                    </nativeImageArgs>
<!--                     <resourceList>
	                    <list>.*/dynamic-proxies.json</list>
                    </resourceList> -->
                </configuration>
            </plugin>
<!-- 			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>all</shadedClassifierName>
							<artifactSet>
								<includes>*:*</includes>
							</artifactSet>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${main.class}</Main-Class>
									</manifestEntries>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
		</plugins>
	</build>
</project>
